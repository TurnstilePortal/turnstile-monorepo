name: Release

on:
  push:
    branches:
      - main
      - release/alpha
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      release_channel: ${{ steps.release_channel.outputs.release_channel }}
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: update npm
        run: npm install -g npm@latest && npm --version && npm ping && npm config get registry

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Select npm dist-tag
        id: release_channel
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/release/alpha" ]; then
            echo "NPM_DIST_TAG=alpha" >> "$GITHUB_ENV"
            echo "RELEASE_CHANNEL=alpha" >> "$GITHUB_ENV"
            echo "npm_dist_tag=alpha" >> "$GITHUB_OUTPUT"
            echo "release_channel=alpha" >> "$GITHUB_OUTPUT"
          else
            echo "NPM_DIST_TAG=latest" >> "$GITHUB_ENV"
            echo "RELEASE_CHANNEL=stable" >> "$GITHUB_ENV"
            echo "npm_dist_tag=latest" >> "$GITHUB_OUTPUT"
            echo "release_channel=stable" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish --tag ${{ steps.release_channel.outputs.npm_dist_tag }}
          version: pnpm run version
          commit: "chore: version packages"
          title: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: "true"

  docker-images:
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    needs: release # Wait for publish to complete
    if: needs.release.outputs.published == 'true' # Only run if packages were published
    uses: ./.github/workflows/docker.yaml  # Call docker workflow
    with:
      push_images: true
      release_channel: ${{ needs.release.outputs.release_channel }}
