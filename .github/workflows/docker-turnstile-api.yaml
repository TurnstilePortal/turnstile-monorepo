name: Docker Build (API)

on:
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean
      tag_latest:
        description: 'Tag images as latest'
        required: false
        default: false
        type: boolean
      tag_suffix:
        description: 'Optional tag suffix (e.g., "dev", "test")'
        required: false
        default: ''
        type: string
  workflow_call:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean
      tag_latest:
        description: 'Tag images as latest'
        required: false
        default: false
        type: boolean
      tag_suffix:
        description: 'Optional tag suffix (e.g., "dev", "test")'
        required: false
        default: ''
        type: string

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    env:
      REGISTRY: ghcr.io
      ORG: turnstileportal

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read package versions
        id: versions
        run: |
          echo "api_common_version=$(jq -r .version ./packages/api-common/package.json)" >> $GITHUB_OUTPUT
          echo "api_service_version=$(jq -r .version ./packages/api-service/package.json)" >> $GITHUB_OUTPUT
          echo "collector_version=$(jq -r .version ./packages/collector/package.json)" >> $GITHUB_OUTPUT
          if [ -n "${{ inputs.tag_suffix }}" ]; then
            echo "tag_suffix=-${{ inputs.tag_suffix }}" >> $GITHUB_OUTPUT
          else
            echo "tag_suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        if: inputs.push_images
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare migrations tags
        id: migrations_tags
        run: |
          TAGS="${{ env.REGISTRY }}/${{ env.ORG }}/migrations:${{ steps.versions.outputs.api_common_version }}${{ steps.versions.outputs.tag_suffix }}"
          if [ "${{ inputs.tag_latest }}" == "true" ]; then
            TAGS="$TAGS
${{ env.REGISTRY }}/${{ env.ORG }}/migrations:latest"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push migrations image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/turnstile-api/Dockerfile
          push: ${{ inputs.push_images }}
          build-args: |
            SERVICE=@turnstile-portal/api-common
          tags: ${{ steps.migrations_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare collector tags
        id: collector_tags
        run: |
          TAGS="${{ env.REGISTRY }}/${{ env.ORG }}/collector:${{ steps.versions.outputs.collector_version }}${{ steps.versions.outputs.tag_suffix }}"
          if [ "${{ inputs.tag_latest }}" == "true" ]; then
            TAGS="$TAGS
${{ env.REGISTRY }}/${{ env.ORG }}/collector:latest"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push collector image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/turnstile-api/Dockerfile
          push: ${{ inputs.push_images }}
          build-args: |
            SERVICE=@turnstile-portal/collector
          tags: ${{ steps.collector_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare api-service tags
        id: api_service_tags
        run: |
          TAGS="${{ env.REGISTRY }}/${{ env.ORG }}/api-service:${{ steps.versions.outputs.api_service_version }}${{ steps.versions.outputs.tag_suffix }}"
          if [ "${{ inputs.tag_latest }}" == "true" ]; then
            TAGS="$TAGS
${{ env.REGISTRY }}/${{ env.ORG }}/api-service:latest"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push api-service image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/turnstile-api/Dockerfile
          push: ${{ inputs.push_images }}
          build-args: |
            SERVICE=@turnstile-portal/api-service
          tags: ${{ steps.api_service_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Images Built:" >> $GITHUB_STEP_SUMMARY
          echo "- migrations: ${{ steps.versions.outputs.api_common_version }}${{ steps.versions.outputs.tag_suffix }}" >> $GITHUB_STEP_SUMMARY
          echo "- collector: ${{ steps.versions.outputs.collector_version }}${{ steps.versions.outputs.tag_suffix }}" >> $GITHUB_STEP_SUMMARY
          echo "- api-service: ${{ steps.versions.outputs.api_service_version }}${{ steps.versions.outputs.tag_suffix }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.tag_latest }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Also tagged as 'latest'" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.push_images }}" == "true" ]; then
            echo "✅ Images pushed to ${{ env.REGISTRY }}/${{ env.ORG }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏸️ Images built but not pushed (dry run)" >> $GITHUB_STEP_SUMMARY
          fi
